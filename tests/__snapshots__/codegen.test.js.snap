// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`codegen > can generate types from database with custom path 1`] = `
"/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface Products {
  description: string | null;
  id: Generated<number | null>;
  inStock: Generated<number>;
  metadata: string | null;
  name: string;
  price: number;
  tags: string | null;
}

export interface Users {
  age: number | null;
  avatarBlob: Buffer | null;
  bio: string | null;
  createdAt: Generated<string>;
  email: string | null;
  id: Generated<number | null>;
  isActive: Generated<number>;
  name: string;
  score: number | null;
  updatedAt: string | null;
}

export interface DB {
  products: Products;
  users: Users;
}
"
`;

exports[`codegen > can generate types from database with diverse schema and constraints 1`] = `
"/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface Categories {
  createdAt: Generated<string>;
  description: string | null;
  id: Generated<number | null>;
  name: string;
}

export interface Items {
  categoryId: number;
  createdAt: Generated<string>;
  id: Generated<number | null>;
  isAvailable: Generated<number>;
  name: string;
  price: number;
  quantity: Generated<number>;
}

export interface Products {
  description: string | null;
  id: Generated<number | null>;
  inStock: Generated<number>;
  metadata: string | null;
  name: string;
  price: number;
  tags: string | null;
}

export interface Users {
  age: number | null;
  avatarBlob: Buffer | null;
  bio: string | null;
  createdAt: Generated<string>;
  email: string | null;
  id: Generated<number | null>;
  isActive: Generated<number>;
  name: string;
  score: number | null;
  updatedAt: string | null;
}

export interface DB {
  categories: Categories;
  items: Items;
  products: Products;
  users: Users;
}
"
`;
